/**
 * @title Core
 * @description These features are throughout the source code and can be plugged in on any element.
 * @writeName index
 * ## Element Based Styles
*/

*,
*::before,
*::after {
    box-sizing: border-box;
    color: var(--black);
}

::selection {
    background-color: var(--accent);
    color: var(--primary);
}

html,
body {
    margin: 0;
    padding: 0;
}

/**
 *
 * ### Links
 * Link do not need any special class names to match stylistically, however they should follow some convetions
 * - links should direct users through the page
 * - links should direct pages to outside pages or pages of content within the site structure
 * - links **should not** be used to trigger user actions such as modals.
 *
 * @example html
 * <a href="#">I am a link</a>
 */
a {
    display: inline-block;
    color: var(--accent);
    text-decoration: none;
    vertical-align: middle;
    font-weight: 700;
    border-bottom: 1px solid transparent;
}

a + a {
    margin-top: 1vw;
}

a:hover {
    border-bottom: 1px solid var(--primary-dk);
}

/**
 *
 * ### Horizontal Rule
 * @description `<hr />` do not need a special class, by default they will take up 90% of their containing element and be centered
 * @example html
 * <h3>I am a medium sized heading</h3>
 * <p> This is content, lorem ipsum and such...</p>
 * <hr />
 * <h3>Next section...</h3>
 */
hr {
    width: 90%;
    margin: 1rem auto;
    border: 0;
    border-bottom: 1px solid var(--accent-lt);
}
h1 + hr {
    width: 100%;
}

/**
 *
 * ### Buttons
 * @todo research implication of removing outline for accessability.
 */
button {
    outline: none;
    font-variant: small-caps;
    text-transform: lowercase;
    border: 1px solid var(--primary-dk);
    border-radius: 2px;
    background-color: transparent;
    padding: .3rem .7rem .35rem .45rem;
}

button:hover {
    border: 1px solid var(--accent);
}

button:active {
    border: 1px solid var(--accent-dk);
}

/**
 * ### Tables
 * @description Tables are used to display organized data structures, they are not to be used for layouts or multiform data.
 * @example html
 * <table>
 *   <thead>
 *       <tr>
 *           <th>CLASS NAME</th>
 *           <th>BREAKPOINT</th>
 *       </tr>
 *   </thead>
 *   <tbody>
 *       <tr>
 *           <td>.col-sm-*</td>
 *           <td>≤640px</td>
 *       </tr>
 *       <tr>
 *           <td>.col-md-*md</td>
 *           <td>≥641px</td>
 *       </tr>
 *       <tr>
 *           <td>.col-lrg-*lrg</td>
 *           <td>≥1025px</td>
 *       </tr>
 *       <tr>
 *           <td>.col-xl-*xl</td>
 *           <td>≥1441px</td>
 *       </tr>
 *       <tr>
 *           <td>.col-xxl-*xxl</td>
 *           <td>≥1921px</td>
 *       </tr>
 *   </tbody>
 * </table>
 */
table {
    width: 100%;
    border-collapse: collapse;
    background-color: #fff;
    box-shadow: 0 1px 2px 0 var(--black-alpha);
}
thead {
    border: 0;
    border-bottom: 1px solid var(--primary-dk);
    font-variant: small-caps;
    text-transform: lowercase;
    font-size: 1.25rem;
    text-align: left;
}
th,
td {
    padding: .5rem;
}
tbody tr:hover {
    background-color: var(--accent-lt);
}

/*
 * ---
 * ## Class Based Styles
 *
 */

/**
 *
 * ### MICRO CLEARFIX
 * @author [nicolas gallagher](http://nicolasgallagher.com)
 * @url http://nicolasgallagher.com/micro-clearfix-hack/
 *
 * Apply a class of `cf` to any element that has floated elements inside of it.
 * @example html
 * <section class="cf">
 *  <section style="float: left; width: 25%;">I am floating left</section>
 *  <section style="float: left; width: 74%;">I am also floating left so the parent section will not have any height.<section>
 * </section>
 */

.cf:before,
.cf:after {
    content: " ";
    display: table;
}

.cf:after {
    clear: both;
}

/**
 * ### hidden / hide
 * @description this hides an element usin an `!important` rule.
 */
.hidden,
.hide {
    display: none !important;
}

